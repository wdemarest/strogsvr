if [ ! -f ~/.ssh/strog.pem ]; then
    echo "You must have a file ~/.ssh/strog.pem that can access the server ubuntu@strog.com"
    echo "Please correct this and try again."
    exit 1
fi

export connect="ssh ubuntu@strog.com -i ~/.ssh/strog.pem"

if [ "$1" != "deploy" ] && [ "$1" != "config" ] && [ "$1" != "stop" ] && [ "$1" != "start" ] && [ "$1" != "restart" ] && [ "$1" != "status" ] && [ "$1" != "log" ] && [ "$1" != "login" ] && [ "$1" != "fetch" ] && [ "$1" != "dev" ]
then
echo "svr takes one of the following parameters:"
echo "* deploy [strogsrv|candyhop|reactorRescue|shadowStone]  - deploys to and overwrites server"
echo "* config [strogsrv|shadowStone]  - copies config.production.secret.hjson to server"
echo "* log    [strogsvr|shadowStone]  - emits the logfile from the server"
echo "* start    - starts the servers"
echo "* restart  - re-starts the servers"
echo "* stop     - stops the servers"
echo "* status   - shows the status of the running servers"
echo "* login    - shell to the server"
echo "* fetch    - fetch server-only files into the ./archive directory, as backups"
echo "* dev      - starts strogsvr on your dev machine"
echo ""
echo "See the README.md file for server setup details."
exit 1
fi

#
# WARNING: Don't forget to "git clone" all projects into the server BEFORE first deploy.
# Also, the server has a lot of data that is not present in the repo, including:
# sessions/, payments/, chpack/, config.json, userdata.json
#

if [ "$1" == "deploy" ] && [ "$2" == "strogsvr" ]
then
echo Deploying from github.com/wdemarest/strogsvr to strog.com
$connect "cd ~/strogsvr ; git fetch --all ; git reset --hard origin/master ; npm install"
fi

if [ "$1" == "deploy" ] && [ "$2" == "candyhop" ]
then
echo Deploying from github.com/wdemarest/candyhop to strog.com
$connect "cd ~/candyhop ; git fetch --all ; git reset --hard origin/master ; npm install"
fi

if [ "$1" == "deploy" ] && [ "$2" == "reactorRescue" ]
then
echo Deploying from github.com/wdemarest/reactorRescue to strog.com
$connect "cd ~/reactorRescue ; git fetch --all ; git reset --hard origin/master ; npm install"
fi

if [ "$1" == "deploy" ] && [ "$2" == "shadowStone" ]
then
echo Deploying from github.com/wdemarest/shadowStone to strog.com
$connect "cd ~/shadowStone ; git fetch --all ; git reset --hard origin/master ; npm install"
fi

if [ "$1" == "config" ] && [ "$2" == "strogsvr" ]
then
echo Pushing strogsvr config to strog.com
scp -i ~/.ssh/strog.pem ./config.production.secret.hjson ubuntu@strog.com:strogsvr
fi

if [ "$1" == "config" ] && [ "$2" == "shadowStone" ]
then
echo Pushing ../shadowStone config to strog.com
scp -i ~/.ssh/strog.pem ../shadowStone/config.production.secret.hjson ubuntu@strog.com:shadowStone
fi

if [ "$1" == "stop" ] || [ "$1" == "restart" ]
then
echo Stopping strogsvr on strog.com
$connect "pkill node"
$connect "ps ax | grep n[o]de.*server.js"
fi

if [ "$1" == "start" ] || [ "$1" == "restart" ]
then
echo Starting strogsvr on strog.com
$connect "cd ~/strogsvr ; export STROG_CONFIG_ID=production ; nohup node /usr/local/bin/supervisor -x node -n error ./server.js >> ~/strogsvr/strogsvr.log 2>&1 &"
echo Starting shadowStone on strog.com
$connect "cd ~/shadowStone ; export STROG_CONFIG_ID=production ; nohup node /usr/local/bin/supervisor -x node -n error ./app.js >> ~/strogsvr/shadowStone.log 2>&1 &"
fi

if [ "$1" == "status" ] || [ "$1" == "start" ] || [ "$1" == "restart" ]
then
echo Status of strogsvr on strog.com
$connect "ps ax | grep n[o]de.*server.js"
echo Status of shadowStone on strog.com
$connect "ps ax | grep n[o]de.*app.js"
fi

if [ "$1" == "log" ] && [ "$2" == "strogsvr" ]
then
$connect "tail -f -n 100 ~/strogsvr/strogsvr.log"
fi

if [ "$1" == "log" ] && [ "$2" == "shadowStone" ]
then
$connect "tail -f -n 100 ~/shadowStone/shadowStone.log"
fi

if [ "$1" == "login" ]
then
$connect
fi

if [ "$1" == "fetch" ]
then

export ARCHIVE="archive_$(date +"%Y_%m_%d_%H_%M_%S")"

echo Pulling files from server into $ARCHIVE
if [ ! -f ./svr ]; then
echo Must be run from strogsvr directory
exit
fi
mkdir -p $ARCHIVE
mkdir -p $ARCHIVE/payments
mkdir -p $ARCHIVE/chpack
scp -i ~/.ssh/strog.pem ubuntu@strog.com:strogsvr/config.json ./$ARCHIVE
scp -i ~/.ssh/strog.pem ubuntu@strog.com:strogsvr/credentials.json ./$ARCHIVE
scp -i ~/.ssh/strog.pem ubuntu@strog.com:strogsvr/userdata.json ./$ARCHIVE
scp -i ~/.ssh/strog.pem ubuntu@strog.com:strogsvr/codes.json ./$ARCHIVE
scp -i ~/.ssh/strog.pem ubuntu@strog.com:strogsvr/payments/* ./$ARCHIVE/payments
scp -i ~/.ssh/strog.pem ubuntu@strog.com:strogsvr/chpack/* ./$ARCHIVE/chpack
fi

if [ "$1" == "dev" ]
then
echo Starting strogsvr for developer
if [[ $(redis-cli ping) = PONG ]]; then
nodemon server.js
exit
fi
echo Please start Redis with redis-server
fi
