if [ ! -f ~/.ssh/CandyHop.pem ]; then
    echo "You must have a file ~/.ssh/CandyHop.pem that can access the server ubuntu@playcandyhop.com"
    echo "Please correct this and try again."
    exit 1
fi

if [ "$1" != "deploy" ] && [ "$1" != "stop" ] && [ "$1" != "start" ] && [ "$1" != "restart" ] && [ "$1" != "status" ] && [ "$1" != "log" ] && [ "$1" != "login" ] && [ "$1" != "fetch" ]
then
echo "pch takes one of the following parameters:"
echo "* deploy [server|candyhop|reactorRescue]  - deploys to and overwrites server"
echo "* start    - starts the server"
echo "* restart  - re-starts the server"
echo "* stop     - stops the server at"
echo "* status   - shows the status of the running server"
echo "* log      - emits the logfile from the server"
echo "* login    - shell to the server"
echo "* fetch    - fetch server-only files into the ./archive directory, as backups"
exit 1
fi

#
# WARNING: Don't forget to "git clone" all projects into the server BEFORE first deploy.
# Also, the server has a lot of data that is not present in the repo, including:
# sessions/, payments/, chpack/, config.json, userdata.json
#

if [ "$1" == "deploy" ] && [ "$2" == "strogsvr" ]
then
echo Deploying from github.com/wdemarest/strogsvr to playcandyhop.com
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "cd ~/strogsvr ; git fetch --all ; git reset --hard origin/master"
fi

if [ "$1" == "deploy" ] && [ "$2" == "candyhop" ]
then
echo Deploying from github.com/wdemarest/candyhop to playcandyhop.com
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "cd ~/candyhop ; git fetch --all ; git reset --hard origin/master"
fi

if [ "$1" == "deploy" ] && [ "$2" == "reactorRescue" ]
then
echo Deploying from github.com/wdemarest/reactorRescue to playcandyhop.com
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "cd ~/reactorRescue ; git fetch --all ; git reset --hard origin/master"
fi

if [ "$1" == "stop" ] || [ "$1" == "restart" ]
then
echo Stopping strogsvr on playcandyhop.com
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "pkill nodejs"
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "ps ax | grep n[o]dejs.*server.js"
fi

if [ "$1" == "start" ] || [ "$1" == "restart" ]
then
echo Starting strogsvr on playcandyhop.com
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "cd ~/strogsvr ; nohup nodejs /usr/local/bin/supervisor -x nodejs -n error ./server.js >> ~/strogsvr/strogsvr.log 2>&1 &"
fi

if [ "$1" == "status" ] || [ "$1" == "start" ] || [ "$1" == "restart" ]
then
echo Status of strogsvr on playcandyhop.com
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "ps ax | grep n[o]dejs.*server.js"
fi

if [ "$1" == "log" ]
then
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem "tail -f -n 100 ~/strogsvr/strogsvr.log"
fi

if [ "$1" == "login" ]
then
ssh ubuntu@playcandyhop.com -i ~/.ssh/CandyHop.pem
fi

if [ "$1" == "fetch" ]
then
echo Pulling files from server into ./archive
if [ ! -f ./svr ]; then
echo Must be run from strogsvr directory
exit
fi
mkdir -p archive
mkdir -p archive/payments
mkdir -p archive/chpack
scp -i ~/.ssh/CandyHop.pem ubuntu@playcandyhop.com:strogsvr/config.json ./archive
scp -i ~/.ssh/CandyHop.pem ubuntu@playcandyhop.com:strogsvr/credentials.json ./archive
scp -i ~/.ssh/CandyHop.pem ubuntu@playcandyhop.com:strogsvr/userdata.json ./archive
scp -i ~/.ssh/CandyHop.pem ubuntu@playcandyhop.com:strogsvr/codes.json ./archive
scp -i ~/.ssh/CandyHop.pem ubuntu@playcandyhop.com:strogsvr/payments/* ./archive/payments
scp -i ~/.ssh/CandyHop.pem ubuntu@playcandyhop.com:strogsvr/chpack/* ./archive/chpack
fi

